[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "safe-mol"
description = "Implementation of the 'Gotta be SAFE: a new framework for molecular design' paper"
dynamic = ["version"]
authors = [{ name = "Emmanuel Noutahi", email = "emmanuel.noutahi@gmail.com" }]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

keywords = ["safe", "smiles", "de novo", "design", "molecules"]
dependencies = [
    "tqdm",
    "loguru",
    "typer",
    "universal_pathlib",
    "datamol",
    "numpy",
    "torch>=2.0",
    "transformers",
    "datasets",
    "tokenizers",
    "accelerate",
    "evaluate",
    "wandb",
    "huggingface-hub",
    "rdkit"
]

[project.optional-dependencies]
docs = [
    "mkdocsi <= 1.6.0",
    "mkdocs-material>=7.1.1",
    "mkdocs-material-extensions",
    "mkdocstrings < 0.28.0",
    "mkdocstrings-python",
    "mkdocs-jupyter",
    "markdown-include",
    "mdx_truly_sane_lists",
    "mike >=1.0.0",
]

[project.urls]
"Source Code" = "https://github.com/datamol-io/safe"
"Bug Tracker" = "https://github.com/datamol-io/safe/issues"
Documentation = "https://safe-docs.datamol.io/"


[project.scripts]
safe-train = "safe.trainer.cli:main"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = ["LICENSE"]

[tool.setuptools_scm]
fallback_version = "dev"

[tool.setuptools.packages.find]
where = ["."]
include = ["safe", "safe.*"]
exclude = []
namespaces = true

[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --color yes"
testpaths = ["tests"]


[tool.ruff]
line-length = 120
# Enable Pyflakes `E` and `F` codes by default.
lint.select = [
    "E",
    "W", # see: https://pypi.org/project/pycodestyle
    "F", # see: https://pypi.org/project/pyflakes
]
lint.extend-select = [
    "C4", # see: https://pypi.org/project/flake8-comprehensions
    "SIM", # see: https://pypi.org/project/flake8-simplify
    "RET", # see: https://pypi.org/project/flake8-return
    "PT", # see: https://pypi.org/project/flake8-pytest-style
]
lint.ignore = [
    "E731", # Do not assign a lambda expression, use a def
    "S108",
    "F401",
    "S105",
    "E501",
    "E722",
]
# Exclude a variety of commonly ignored directories.
exclude = [".git", "docs", "_notebooks"]
lint.ignore-init-module-imports = true
